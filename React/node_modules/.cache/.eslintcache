[{"/Users/chenhan/Desktop/eti_assignment2/React/src/index.js":"1","/Users/chenhan/Desktop/eti_assignment2/React/src/reportWebVitals.js":"2","/Users/chenhan/Desktop/eti_assignment2/React/src/App.js":"3","/Users/chenhan/Desktop/eti_assignment2/React/src/components/RegisterStudent.js":"4","/Users/chenhan/Desktop/eti_assignment2/React/src/components/TutoringFn.js":"5","/Users/chenhan/Desktop/eti_assignment2/React/src/components/Booking.js":"6","/Users/chenhan/Desktop/eti_assignment2/React/src/components/Student.js":"7","/Users/chenhan/Desktop/eti_assignment2/React/src/components/Login.js":"8","/Users/chenhan/Desktop/eti_assignment2/React/src/components/Profile.js":"9","/Users/chenhan/Desktop/eti_assignment2/React/src/components/RegisterTutor.js":"10","/Users/chenhan/Desktop/eti_assignment2/React/src/components/ChatroomPage.js":"11","/Users/chenhan/Desktop/eti_assignment2/React/src/components/Tutor.js":"12","/Users/chenhan/Desktop/eti_assignment2/React/src/services/auth.service.js":"13","/Users/chenhan/Desktop/eti_assignment2/React/src/services/subject.service.js":"14","/Users/chenhan/Desktop/eti_assignment2/React/src/services/chatting.service.js":"15","/Users/chenhan/Desktop/eti_assignment2/React/src/common/EventBus.js":"16","/Users/chenhan/Desktop/eti_assignment2/React/src/services/payment.service..js":"17","/Users/chenhan/Desktop/eti_assignment2/React/src/services/tutoring.service.js":"18","/Users/chenhan/Desktop/eti_assignment2/React/src/components/Chatroom.js":"19"},{"size":623,"mtime":1675593072050,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1675593072050,"results":"22","hashOfConfig":"21"},{"size":8080,"mtime":1675593084002,"results":"23","hashOfConfig":"21"},{"size":7334,"mtime":1675593072047,"results":"24","hashOfConfig":"21"},{"size":10653,"mtime":1675593072049,"results":"25","hashOfConfig":"21"},{"size":6476,"mtime":1675593072045,"results":"26","hashOfConfig":"21"},{"size":399,"mtime":1675593072048,"results":"27","hashOfConfig":"21"},{"size":3834,"mtime":1675593072046,"results":"28","hashOfConfig":"21"},{"size":3478,"mtime":1675593072047,"results":"29","hashOfConfig":"21"},{"size":14960,"mtime":1675593072048,"results":"30","hashOfConfig":"21"},{"size":3099,"mtime":1675593072046,"results":"31","hashOfConfig":"21"},{"size":391,"mtime":1675593072048,"results":"32","hashOfConfig":"21"},{"size":1948,"mtime":1675683274948,"results":"33","hashOfConfig":"21"},{"size":860,"mtime":1675684341310,"results":"34","hashOfConfig":"21"},{"size":1959,"mtime":1675687396263,"results":"35","hashOfConfig":"21"},{"size":350,"mtime":1675593072044,"results":"36","hashOfConfig":"21"},{"size":680,"mtime":1675684782989,"results":"37","hashOfConfig":"21"},{"size":1533,"mtime":1675688910298,"results":"38","hashOfConfig":"21"},{"size":3928,"mtime":1675593072045,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"1sxdp30",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"43"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"43"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"43"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"43"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"43"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104"},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"43"},"/Users/chenhan/Desktop/eti_assignment2/React/src/index.js",[],[],[],"/Users/chenhan/Desktop/eti_assignment2/React/src/reportWebVitals.js",[],[],"/Users/chenhan/Desktop/eti_assignment2/React/src/App.js",[],[],"/Users/chenhan/Desktop/eti_assignment2/React/src/components/RegisterStudent.js",["109","110","111","112","113","114","115","116","117","118","119","120"],[],"import React, { useState, useRef } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\nimport { isEmail } from \"validator\";\nimport AuthService from \"../services/auth.service\";\nimport SubjectServices from \"../services/subject.service\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"invalid-feedback d-block\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"invalid-feedback d-block\">\n        This email cannot be registered!\n      </div>\n    );\n  }\n};\n\n\nconst vpassword = (value) => {\n  if (value.length < 8 || value.length > 40) {\n    return (\n      <div className=\"invalid-feedback d-block\">\n        The password must be between 8 and 40 characters.\n      </div>\n    );\n  }\n};\n\n\nconst RegisterStudent = () => {\n\n  const navigate = useNavigate();\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [school, setSchool] = useState(\"\");\n  const [selectedSubjects, setSelectedSubjects] = useState({\n    \"PSLE\" : [],\n    \"O-Level\": [],\n    \"A-Level\": []\n  });\n\n  const subjects = SubjectServices.getAllSubjects()\n  const PSLESubjects = subjects[\"PSLE\"].sort()\n  const OlevelSubjects = subjects[\"O-Level\"].sort()\n  const AlevelSubjects = subjects[\"A-Level\"].sort()\n\n  const PSLEArray = [];\n  for (let i = 0; i < PSLESubjects.length; i++) {\n    var value = PSLESubjects[i]\n    PSLEArray.push({key: value, label: value })\n  } \n\n  const OLevelArray = [];\n  for (let i = 0; i < OlevelSubjects.length; i++) {\n    var value = OlevelSubjects[i] \n    OLevelArray.push({key: value, label: value })\n  } \n\n  const ALevelArray = [];\n  for (let i = 0; i < AlevelSubjects.length; i++) {\n    var value = AlevelSubjects[i] \n    ALevelArray.push({key: value, label: value })\n  } \n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangeName = (e) => {\n    const name = e.target.value;\n    setName(name);\n  };\n\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const onChangeSchool = (e) => {\n    const school = e.target.value;\n    setSchool(school);\n  };\n\n  const OnChangePSLE = (event, subject) => {\n    let updated = selectedSubjects\n    updated[\"PSLE\"] = subject\n    setSelectedSubjects(selectedSubjects => ({\n      ...updated\n    }));\n  }\n\nconst onChangeOlevel = (subject) => {\n    let updated = selectedSubjects\n    updated[\"O-Level\"] = subject\n    setSelectedSubjects(selectedSubjects => ({\n        ...updated\n    }));\n}\n\nconst onChangeAlevel = (subject) => {\n    let updated = selectedSubjects\n    updated[\"A-Level\"] = subject\n    setSelectedSubjects(selectedSubjects => ({\n        ...updated\n    }));\n}\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n\n    if  (name == \"\" || email == \"\" || password == \"\" || school == \"\") {\n      alert(\"please fill up all the required fields!\")\n      return\n    } else if (selectedSubjects[\"A-Level\"].length == 0 && selectedSubjects[\"PSLE\"].length == 0 && selectedSubjects[\"O-Level\"].length == 0){\n      alert(\"please choose at least one area of interest!\")\n      return\n    } else {\n      AuthService.register_student(name, email, password, school, selectedSubjects).then(\n        (response) => {\n          if (response.status == 200) {\n            alert(\"Registered successfully!\")\n            navigate(\"/login\");\n            window.location.reload();\n          } else {\n            alert(\"Error, try again\")\n          }\n        },\n        (error) => {\n          var resMessage = \"\"\n          if (error.response.status === 406) {\n            resMessage = \"This email has been registered!\"\n            alert(resMessage)\n          } else {\n            resMessage =\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString();\n            alert(resMessage)\n          }\n        }\n      );\n    }\n  };\n\n\n  return (\n\n        <Form className=\"auto-inner\">\n            <div>\n            <h3>Register Student</h3>\n              <hr className=\"hr\"></hr>\n              <h4>Basic Details</h4>\n              <div className=\"mb-3\">\n                <label htmlFor=\"name\">Name</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={name}\n                  onChange={onChangeName}\n                  validations={[required]}\n                />\n              </div>\n\n              <div className=\"mb-3\">\n                <label htmlFor=\"email\">Email</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChangeEmail}\n                  validations={[required, validEmail]}\n                />\n              </div>\n\n              <div className=\"mb-3\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"mb-3\">\n                <label htmlFor=\"school\">School</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"school\"\n                  value={school}\n                  onChange={onChangeSchool}\n                  validations={[required]}\n                />\n              </div>\n\n              <hr className=\"hr\"></hr>\n              <h4>Area of Interests</h4>\n              <div className=\"mb-3\">\n                  <label htmlFor=\"options\">PSLE</label>\n                  <DropdownMultiselect options={PSLEArray} name=\"pslesubjects\" \n                  handleOnChange={(event, selected) => {\n                    OnChangePSLE(event, selected);\n                  }}/>\n              </div>\n\n              <div className=\"mb-3\">\n                  <label htmlFor=\"options\">O-Level</label>\n                  <DropdownMultiselect options={OLevelArray} name=\"olevelsubjects\"\n                  handleOnChange={(selected) => {\n                    onChangeOlevel(selected);\n                  }}/>\n              </div>\n\n              <div className=\"mb-3\">\n                  <label htmlFor=\"options\">A-Level</label>\n                  <DropdownMultiselect options={ALevelArray} name=\"alevelsubjects\"\n                  handleOnChange={(selected) => {\n                    onChangeAlevel(selected);\n                  }}/>\n              </div>\n\n              <div className=\"d-grid\">\n                <button onClick={handleRegister} className=\"btn btn-success btn-block\">Register</button>\n              </div>\n            </div>\n        </Form>\n  );\n};\n\nexport default RegisterStudent","/Users/chenhan/Desktop/eti_assignment2/React/src/components/TutoringFn.js",["121","122","123","124","125"],[],"import AuthService from \"../services/auth.service\";\nimport React, { useState, useEffect } from \"react\";\nimport { Modal, Button} from 'react-bootstrap';\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport TutoringService from \"../services/tutoring.service\";\nimport SubjectServices from \"../services/subject.service\";\nimport Card from 'react-bootstrap/Card';\nimport moment from \"moment\";\n\n\nconst Tutoring = () => {\n\n    const currentUser = AuthService.getCurrentUser();\n    const [selectedSubjects, setSelectedSubjects] = useState({\n      \"PSLE\" : [],\n      \"O-Level\": [],\n      \"A-Level\": []\n    });\n    const [tutorList, setTutorList] = useState([]);\n    const [listItemsTutors, setListItemTutors] = useState(\"\")\n    const [clickedTutor, setClickedTutor] = useState(null)\n    const [chosenSubject, setChosenSubject] = useState(\"\");\n    const [chosenDuration, setChosenDuration] = useState(0);\n\n    const handleSelect = (eventKey) => {\n      setChosenSubject(eventKey);\n    };\n\n    const handleSelectDuration = (eventKey) => {\n      setChosenDuration(eventKey)\n    }\n\n\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n      setClickedTutor(null);\n      setChosenSubject(\"\");\n      setShow(false);\n    }\n\n    const handleShow = (tutor) => {\n      setClickedTutor(tutor)\n      setShow(true);\n    }\n\n\n    useEffect(() => {\n      // displaying the Tutor Card \n      setListItemTutors(Array.isArray(tutorList) ? tutorList.map((tutor, index) =>\n        <div key={\"tutor_\"+index}>\n          <br />\n          <Card style={{ width: '100%' }}>\n            <Card.Body>\n              <Card.Title>{index+1 + \". \" + tutor.Name}</Card.Title>\n              <Card.Text>\n                <div>\n                  <p>\n                    <strong>Availability</strong> <br />\n                    {Object.entries(tutor.Availability).map(([day, schedule], index) => [\n                      day + ': ' + schedule.start.slice(0, 2) + schedule.start.slice(3) + ' to ' + schedule.end.slice(0, 2) + schedule.end.slice(3), \n                      <br key={index} />\n                    ])}\n                  </p>\n                  <p>\n                    <strong>Hourly Rates</strong> <br />\n                    $ {tutor.HourlyRate}\n                    <br />\n                  </p>\n                  <p>\n                    <strong>Matched Subjects</strong> <br />\n                    {tutor.MatchedSubjectList.map((subject, index) => [subject, <br key={index} />])}\n                  </p>\n                </div>\n              <hr className=\"hr\"></hr>\n              </Card.Text>\n              <Button variant=\"primary\" onClick={() => handleShow(tutor)}>Book A Session</Button>\n            </Card.Body>\n          </Card>\n        </div>\n        ) : []);\n\n    }, [tutorList]);\n\n\n    const subjects = SubjectServices.getAllSubjects()\n    const PSLESubjects = subjects[\"PSLE\"].sort()\n    const OlevelSubjects = subjects[\"O-Level\"].sort()\n    const AlevelSubjects = subjects[\"A-Level\"].sort()\n\n    const PSLEArray = [];\n    for (let i = 0; i < PSLESubjects.length; i++) {\n        var value = PSLESubjects[i]\n        PSLEArray.push({key: value, label: value })\n    } \n\n    const OLevelArray = [];\n    for (let i = 0; i < OlevelSubjects.length; i++) {\n        var value = OlevelSubjects[i] \n        OLevelArray.push({key: value, label: value })\n    } \n\n    const ALevelArray = [];\n    for (let i = 0; i < AlevelSubjects.length; i++) {\n        var value = AlevelSubjects[i] \n        ALevelArray.push({key: value, label: value })\n    } \n    \n    const OnChangePSLE = (subject) => {\n        let updated = selectedSubjects\n        updated[\"PSLE\"] = subject\n        setSelectedSubjects(selectedSubjects => ({\n          ...updated\n        }));\n      }\n    \n    const onChangeOlevel = (subject) => {\n        let updated = selectedSubjects\n        updated[\"O-Level\"] = subject\n        setSelectedSubjects(selectedSubjects => ({\n            ...updated\n        }));\n    }\n\n    const onChangeAlevel = (subject) => {\n        let updated = selectedSubjects\n        updated[\"A-Level\"] = subject\n        setSelectedSubjects(selectedSubjects => ({\n            ...updated\n        }));\n    }\n\n\n    const handleSearchTutor = (e) => {\n      e.preventDefault();\n      \n      if (selectedSubjects[\"PSLE\"].length === 0 && selectedSubjects[\"O-Level\"].length === 0 && selectedSubjects[\"A-Level\"].length === 0) {\n        alert(\"Please select at least one subject!\")\n        return\n      }\n\n      TutoringService.matchTutors(selectedSubjects).then(\n        (response) => {\n          console.log(response)\n          if (response.status === 202) {\n            setTutorList(response.data);\n          } else {\n            console.log(\"response status: \" + response.status);\n          }\n        },\n        (error) => {\n          if (error.response.status == 404){\n            setTutorList({})\n            alert(\"No tutor matched!\")\n          }\n        }\n      );\n    }\n\n    const handleBookSession = (e) => {\n      e.preventDefault();\n      if (chosenDuration === 0) {\n        alert(\"Please choose a duration for your booking!\")\n        return\n      }\n      if (chosenSubject === \"\") {\n        alert(\"Please choose one subject!\")\n        return\n      } \n\n      var appJson = {\n        \"application_status\":\"Pending\",\n        \"hourly_rate\": clickedTutor.HourlyRate,\n        \"session_length\": parseInt(chosenDuration, 10),\n        \"student_id\":currentUser.user_id,\n        \"student_name\":currentUser.name,\n        \"subject\":chosenSubject,\n        \"tutor_id\":clickedTutor.UserID,\n        \"tutor_name\": clickedTutor.Name\n      }\n\n      TutoringService.applyForTutor(appJson).then(\n        (response) => {\n          console.log(response)\n          if (response.status === 202) {\n            console.log(\"success!!!\")\n            alert(\"Booking successful! Please wait for the Tutor to approve.\")\n            window.location.reload(true)\n          } else {\n            console.log(\"response status: \" + response.status);\n          }\n        },\n        (error) => {\n          if (error.response.status == 404){\n            alert(\"error!!!\")\n          }\n        }\n      );\n    }\n\n    return (\n    <div className=\"auth-inner\">\n        <div>\n          <h3>Search for tutors!</h3>\n            <div>\n              <hr className=\"hr\"></hr>\n              <h4>Choose the subjects you are looking for.</h4>\n            \n              <hr className=\"hr\"></hr>\n              \n              <div className=\"mb-3\">\n                  <label htmlFor=\"options\">PSLE</label>\n                  <DropdownMultiselect options={PSLEArray} name=\"pslesubjects\" \n                  handleOnChange={(selected) => {\n                    OnChangePSLE(selected);\n                  }}/>\n              </div>\n\n              <div className=\"mb-3\">\n                  <label htmlFor=\"options\">O-Level</label>\n                  <DropdownMultiselect options={OLevelArray} name=\"olevelsubjects\"\n                  handleOnChange={(selected) => {\n                    onChangeOlevel(selected);\n                  }}/>\n              </div>\n\n              <div className=\"mb-3\">\n                  <label htmlFor=\"options\">A-Level</label>\n                  <DropdownMultiselect options={ALevelArray} name=\"alevelsubjects\"\n                  handleOnChange={(selected) => {\n                    onChangeAlevel(selected);\n                  }}/>\n              </div>\n              <hr className=\"hr\"></hr>\n\n              <div className=\"d-grid\">\n                <button onClick={handleSearchTutor} className=\"btn btn-success btn-block\">Search</button>\n              </div>\n            </div>\n  \n        </div>\n\n        <div>\n        <hr className=\"hr\"></hr>\n            {listItemsTutors}\n        </div>\n        {clickedTutor && (\n          <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Book a Session</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n          <div>\n            <p>\n              <strong>Tutor Name</strong>\n              <br />\n              {clickedTutor.Name}\n            </p>\n            <p>\n              <strong>Availability</strong> <br />\n              {Object.entries(clickedTutor.Availability).map(([day, schedule], index) => [\n                day + ': ' + schedule.start.slice(0, 2) + schedule.start.slice(3) + ' to ' + schedule.end.slice(0, 2) + schedule.end.slice(3), \n                <br key={index} />\n              ])}\n            </p>\n            <p>\n              <strong>Hourly Rates</strong> <br />\n              $ {clickedTutor.HourlyRate}\n              <br />\n            </p>\n            <p>\n              <strong>Choose A Subject</strong> <br />\n              <Dropdown onSelect={handleSelect}>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                  {chosenSubject || \"Select a subject\"}\n                </Dropdown.Toggle>\n\n                <Dropdown.Menu>\n                  {clickedTutor.MatchedSubjectList.map((subject) => (\n                    <Dropdown.Item key={subject} eventKey={subject}>\n                      {subject}\n                    </Dropdown.Item>\n                  ))}\n                </Dropdown.Menu>\n              </Dropdown>\n\n       \n            </p>\n            <p>\n              <strong>Choose Duration (min. 1 hour)</strong> <br />\n              <Dropdown onSelect={handleSelectDuration}>\n                <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                  {chosenDuration + \" Hour(s)\" || \"Select duration\"}\n                </Dropdown.Toggle>\n                <Dropdown.Menu>\n                {Object.entries(clickedTutor.Availability)\n                .slice(0, 1)\n                .map(([day, schedule]) => {\n                    const start = moment(schedule.start, \"HH:mm\");\n                    const end = moment(schedule.end, \"HH:mm\");\n                    const diff = end.diff(start, \"hours\");\n\n                    return [...Array(diff).keys()].map((i) => (\n                      <Dropdown.Item key={i} eventKey={i + 1}>\n                        {i + 1 + \" hour(s)\"}\n                      </Dropdown.Item>\n                    ));\n                  })}\n                </Dropdown.Menu>\n              </Dropdown>\n            </p>\n          </div>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>Cancel</Button>\n            <Button variant=\"primary\" onClick={handleBookSession}>Book</Button>\n          </Modal.Footer>\n        </Modal>\n\n        )\n      }\n    </div>\n  );\n};\n\n  export default Tutoring; \n\n  /*\n\n  */","/Users/chenhan/Desktop/eti_assignment2/React/src/components/Booking.js",["126","127","128","129","130","131","132","133"],[],"import AuthService from \"../services/auth.service\";\nimport React, { useState, useRef, useEffect } from \"react\";\nimport TutoringService from \"../services/tutoring.service\";\nimport ChattingServices from \"../services/chatting.service\";\nimport PaymentService from \"../services/payment.service.\";\n\nimport Card from 'react-bootstrap/Card';\nimport {Button, Modal} from 'react-bootstrap';\n\nconst Booking = () => {\n    const currentUser = AuthService.getCurrentUser();\n    const userType = currentUser.user_type;\n    const [appList, setAppList] = useState([]);\n    const [listItemsApps, setListItemsApps] = useState(\"\")\n\n    const [appToPay, setAppToPay] = useState(null);\n\n    // For confirm payment modal\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => {\n      setShow(false)\n      setAppToPay(null)\n    }\n    const handleShow = (app) => {\n      setShow(true) \n      setAppToPay(app);\n    }\n\n    useEffect(() => {\n        TutoringService.getApplications(currentUser.user_id, currentUser.user_type).then(\n            (response) => {\n              setAppList(response)\n              console.log(response)\n            },\n            (error) => {\n              if (error.response.status == 404){\n                console.log(error)\n              }\n            }\n          );\n\n      }, []);\n\n      const handleAccept = app => {\n        app.application_status = \"Accepted\"\n        TutoringService.handleApplications(currentUser.user_type, app).then(\n            (response) => {\n              alert(\"Tutoring application has been accepted!\")\n              ChattingServices.createChatList().then(\n                (response) => {\n                  console.log(response)\n                  if (response.data.length > 0) {\n                    alert(\"A new chatroom has been created for you!\")\n                    window.location.href = \"/chat\"\n                  } else {\n                    window.location.reload(true)\n                  }\n                },\n                (error) => {\n                  if (error.response.status == 404){\n                    console.log(error)\n                    alert(error)\n                  }\n                }\n              );\n\n            },\n            (error) => {\n              if (error.response.status == 404){\n                console.log(error)\n                alert(error)\n              }\n            }\n          );\n      };\n      \n      const handleReject = app => {\n        app.application_status = \"Rejected\"\n        TutoringService.handleApplications(currentUser.user_type, app).then(\n            (response) => {\n              alert(\"Tutoring application has been rejected!\")\n              window.location.reload(true)\n            },\n            (error) => {\n              if (error.response.status == 404){\n                console.log(error)\n              }\n            }\n          );\n      };\n\n      const makePayment = app => {\n        const payment = {\n          \"amount\": app.hourly_rate * app.session_length,\n          \"tutor_id\": app.tutor_id,\n          \"student_id\": app.student_id,\n          \"session_id\": app.session_id\n        }\n        PaymentService.makePayment(payment).then(\n          (response) => {\n            alert(\"Payment has been made!\")\n            window.location.reload(true)\n          },\n          (error) => {\n            if (error.response.status == 404){\n              console.log(error)\n            }\n          }\n        );\n      }\n\n      useEffect(() => {\n        // displaying the Application Cards\n        console.log(listItemsApps)\n        setListItemsApps(Array.isArray(appList) ? appList.map((app, index) =>\n        <Card key={\"app_\"+index} style={{ width: '100%' }}>\n        <Card.Body>\n          {userType===\"Tutor\" && (\n            <Card.Title>{index+1 + \". \" + app.student_name}</Card.Title>\n          )}\n          {userType===\"Student\" && (\n            <Card.Title>{index+1 + \". \" + app.tutor_name}</Card.Title>\n          )}\n            <Card.Text>\n            Subject requested: {app.subject}\n            </Card.Text>\n            <Card.Text>\n            Session length: {app.session_length} hours\n            </Card.Text>\n            <Card.Text>\n            Hourly Rate: $ {app.hourly_rate}\n            </Card.Text>\n\n            <Card.Text>\n            Status: {app.application_status}\n            </Card.Text>\n            {app.application_status === \"Pending\" && userType===\"Tutor\" && (\n              <>\n                <Button variant=\"success\" onClick={() => handleAccept(app)}>Accept</Button>\n                <Button variant=\"danger\" onClick={() => handleReject(app)}>Reject</Button>\n              </>\n            )} \n             {app.application_status === \"Accepted\" && userType === \"Student\" && (\n                <>\n\n                  <Button variant=\"success\" onClick={() => handleShow(app)} >\n                    Pay $ {app.session_length * app.hourly_rate}\n                  </Button>\n                </>\n              )}\n              \n              {app.application_status === \"Rejected\"  && (\n                <>\n                  <Button variant=\"danger\" disabled>\n                    Rejected\n                  </Button>\n                </>\n              )}\n        </Card.Body>\n        </Card>\n        ) : []);\n      }, [appList]);\n\n   \n\n    \n\n    return(\n        <div className=\"auth-inner\">\n            <header className=\"TutorHeader\">\n              {userType===\"Tutor\" && (\n                <h4>Handle your bookings here!</h4>\n              )}{userType===\"Student\" && (\n                <h4>View your booking statuses!</h4>\n              )}\n                \n                <div id=\"example-collapse-text\">\n                    {listItemsApps}\n                </div>\n            </header>\n            <Modal show={show} onHide={handleClose}>\n              <Modal.Header closeButton>\n                <Modal.Title>Confirmation</Modal.Title>\n              </Modal.Header>\n              { appToPay && (\n                  <Modal.Body>Are you confirmed to pay a total amount of ${appToPay.hourly_rate * appToPay.session_length} to {appToPay.tutor_name}?</Modal.Body>\n              )}\n              <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>\n                  Cancel\n                </Button>\n                <Button variant=\"primary\" onClick={() => makePayment(appToPay)}>\n                  Confirm\n                </Button>\n              </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Booking; ","/Users/chenhan/Desktop/eti_assignment2/React/src/components/Student.js",["134","135"],[],"import AuthService from \"../services/auth.service\";\nimport React, { useState, useRef } from \"react\";\n\n\nconst Student = () => {\n  const currentUser = AuthService.getCurrentUser();\n\n\n  return (\n    <div className=\"auth-inner\">\n      <header className=\"studentPage\">\n      <h3>Welcome!</h3> \n      <h3> Student {currentUser.name}</h3>\n      </header>\n      \n    </div>\n  );\n};\n\nexport default Student; ","/Users/chenhan/Desktop/eti_assignment2/React/src/components/Login.js",[],[],"/Users/chenhan/Desktop/eti_assignment2/React/src/components/Profile.js",["136"],[],"import React, { useState, useRef } from \"react\";\nimport AuthService from \"../services/auth.service\";\nimport Button from 'react-bootstrap/Button';\nimport Collapse from 'react-bootstrap/Collapse';\n\n\nconst Profile = () => {\n\n  const currentUser = AuthService.getCurrentUser();\n  const userType = currentUser.user_type;\n  const [open, setOpen] = useState(false);\n  const [open2, setOpen2] = useState(false);\n  const [open3, setOpen3] = useState(false);\n  var aoiDict = currentUser.area_of_interest\n  var area_of_interest = []\n  var listItems = \"\";\n\n  var availDict = {};\n  var availability = [];\n  var listItemsAvail = \"\";\n\n  var certificates = [];\n  var listItemsCert = \"\";\n\n  for (let k in aoiDict) {\n    if (aoiDict[k] != null){\n        for (var i=0; i<aoiDict[k].length; i++) {\n            area_of_interest.push(k+\"-\"+aoiDict[k][i])\n        }\n    }\n  }\n  listItems = (area_of_interest.map(\n    (interest) =>\n    <li>{interest}</li>\n  ));\n  \n  if (userType === \"Tutor\") {\n    availDict = currentUser.availability\n    for (let k in availDict) {\n        availability.push(k+\": \"+ availDict[k][\"start\"] + \" to \" + availDict[k][\"end\"])\n    }\n    listItemsAvail = (availability.map(\n      (avail) =>\n      <li>{avail}</li>\n    ));  \n\n     \n    certificates = currentUser.cert_of_evidence\n    listItemsCert = (certificates.map(\n      (link, index) =>\n      <li>\n        <a href={link}>{\"File \" + (index + 1)}</a></li>\n    ));  \n  }\n\n  return (\n    <div className=\"auth-inner\">\n        <header className=\"jumbotron\">\n          <h3>\n          Your Profile\n          </h3>\n          <br></br>\n        </header>\n      <p>\n        <strong>Name:</strong> {currentUser.name}  \n      </p>\n      <p>\n        <strong>Email:</strong> {currentUser.email} \n      </p>\n      {userType === \"Student\" && (\n        <div>\n        <p>\n        <strong>School:</strong> {currentUser.school} \n        </p>\n\n        <p>\n        <Button\n            onClick={() => setOpen(!open)}\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={open}> Area of Interests </Button>\n        </p>\n        <Collapse in={open}>\n        <div id=\"example-collapse-text\">\n            <ul>{listItems}</ul>\n        </div>\n        </Collapse>\n\n        </div>\n      )}\n      {userType === \"Tutor\" && (\n        <div>\n         <p>\n        <strong>Hourly Rate:</strong> ${currentUser.hourly_rate} \n        </p>\n\n        <p>\n        <Button\n             onClick={() => setOpen(!open)}\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={open}> Proficient Subjects </Button>\n        </p>\n        <Collapse in={open}>\n        <div id=\"example-collapse-text\">\n            <ul>{listItems}</ul>\n        </div>\n      </Collapse>\n\n        <p>\n        <Button\n            onClick={() => setOpen2(!open2)}\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={open2}> Availability </Button>\n        </p>\n        <Collapse in={open2}>\n        <div id=\"example-collapse-text\">\n            <ul>{listItemsAvail}</ul>\n        </div>\n        </Collapse>\n\n        <p>\n        <Button\n            onClick={() => setOpen3(!open3)}\n            aria-controls=\"example-collapse-text\"\n            aria-expanded={open3}> Certificate of Evidence </Button>\n        </p>\n        <Collapse in={open3}>\n        <div id=\"example-collapse-text\">\n            <ul>{listItemsCert}</ul>\n        </div>\n        </Collapse>\n\n\n        </div>\n      )}\n\n\n\n\n    </div>\n  )\n};\n      \nexport default Profile;","/Users/chenhan/Desktop/eti_assignment2/React/src/components/RegisterTutor.js",["137","138","139","140","141","142","143"],[],"import React, { ChangeEvent, useState, useRef } from \"react\";\nimport * as ReactDOM from 'react-dom';\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport DropdownMultiselect from \"react-multiselect-dropdown-bootstrap\";\nimport { isEmail } from \"validator\";\n\nimport AuthService from \"../services/auth.service\";\nimport SubjectServices from \"../services/subject.service\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport TimePicker from 'react-bootstrap-time-picker';\n\nimport { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\nimport {ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\"\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"invalid-feedback d-block\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"invalid-feedback d-block\">\n        This email cannot be registered!\n      </div>\n    );\n  }\n};\n\n\nconst vpassword = (value) => {\n  if (value.length < 8 || value.length > 40) {\n    return (\n      <div className=\"invalid-feedback d-block\">\n        The password must be between 8 and 40 characters.\n      </div>\n    );\n  }\n};\n\n\nconst RegisterTutor = () => {\n  const firebaseConfig = {\n    apiKey: \"AIzaSyC1fuJ1HYNnv5o2_UauLPx7wwgQGj_Jcpc\",\n    authDomain: \"eti-assignment-2.firebaseapp.com\",\n    databaseURL: \"https://eti-assignment-2-default-rtdb.asia-southeast1.firebasedatabase.app\",\n    projectId: \"eti-assignment-2\",\n    storageBucket: \"eti-assignment-2.appspot.com\",\n    messagingSenderId: \"903055257140\",\n    appId: \"1:903055257140:web:676b8fbb0dfc642dbca461\",\n    measurementId: \"G-986C89B33B\"\n  };\n\n  const app = initializeApp(firebaseConfig);\n  const storage = getStorage(app);\n  \n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [hourlyRate, setHourlyRate] = useState(50);\n  const [startTime, setStartTime] = useState(\"08:00\");\n  const [startForEndTime, setStartForEndTime] = useState(\"09:00\");\n  const [endTime, setEndTime] = useState(\"10:00\");\n  const [availability, setAvailability] = useState({});\n  const [selectedSubjects, setSelectedSubjects] = useState({\n    \"PSLE\" : [],\n    \"O-Level\": [],\n    \"A-Level\": []\n  });\n\n\n\n  // Maximum 5 files\n  const MAX_COUNT = 5;\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const [fileLimit, setFileLimit] = useState(false);\n  const [uploadedURLs, setUploadedURLs] = useState([]);\n\n\n  const subjects = SubjectServices.getAllSubjects()\n  const PSLESubjects = subjects[\"PSLE\"].sort()\n  const OlevelSubjects = subjects[\"O-Level\"].sort()\n  const AlevelSubjects = subjects[\"A-Level\"].sort()\n\n\n  const PSLEArray = [];\n  for (let i = 0; i < PSLESubjects.length; i++) {\n    var value = PSLESubjects[i]\n    PSLEArray.push({key: value, label: value })\n  } \n\n  const OLevelArray = [];\n  for (let i = 0; i < OlevelSubjects.length; i++) {\n    var value = OlevelSubjects[i] \n    OLevelArray.push({key: value, label: value })\n  } \n\n  const ALevelArray = [];\n  for (let i = 0; i < AlevelSubjects.length; i++) {\n    var value = AlevelSubjects[i] \n    ALevelArray.push({key: value, label: value })\n  } \n\n  const weekdayArray = [\n    {key: \"Monday\", label: \"Monday\"},\n    {key: \"Tuesday\", label: \"Tuesday\"},\n    {key: \"Wednesday\", label: \"Wednesday\"},\n    {key: \"Thursday\", label: \"Thursday\"},\n    {key: \"Friday\", label: \"Friday\"},\n    {key: \"Saturday\", label: \"Saturday\"},\n    {key: \"Sunday\", label: \"Sunday\"},\n  ];\n\n\n  const [successful, setSuccessful] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangeName = (e) => {\n    const name = e.target.value;\n    setName(name);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const onChangeHourlyRate = (e) => {\n    const hourlyRate = e.target.value;\n    setHourlyRate(hourlyRate)\n    document.getElementById(\"hourlyRate\").textContent = \"$\"+hourlyRate\n  }\n\n  const onChangeStartTime = (e) => {\n    const startTime = new Date(e * 1000).toISOString().substring(11, 16)\n\n    // Add 30 mins \n    const startForEndTime = new Date((e + 1800) * 1000).toISOString().substring(11, 16)\n\n    setStartTime(startTime)\n    setStartForEndTime(startForEndTime)\n  }\n\n  const onChangeEndTime = (e) => {\n    const endTime = new Date(e * 1000).toISOString().substring(11, 16)\n    setEndTime(endTime)\n  }\n\n  const OnChangePSLE = (subject) => {\n    let updated = selectedSubjects\n    updated[\"PSLE\"] = subject\n    setSelectedSubjects(selectedSubjects => ({\n      ...updated\n    }));\n  }\n\n  const onChangeOlevel = (subject) => {\n    let updated = selectedSubjects\n    updated[\"O-Level\"] = subject\n    setSelectedSubjects(selectedSubjects => ({\n      ...updated\n    }));\n  }\n\n  const onChangeAlevel = (subject) => {\n    let updated = selectedSubjects\n    updated[\"A-Level\"] = subject\n    setSelectedSubjects(selectedSubjects => ({\n      ...updated\n    }));\n  }\n\n  const onChangeWeekDays = (weekdays) => {\n    let updatedValue = {};\n    for (var i=0; i<weekdays.length; i++) {\n      updatedValue[weekdays[i]] = {\n        \"start\": \"\", \"end\": \"\"\n      }\n    }\n    setAvailability(availability => ({\n          ...updatedValue\n        }));\n  }\n\n  const handleUploadFiles = files => {\n    const uploaded = [...uploadedFiles];\n    let limitExceeded = false;\n    files.some((file) => {\n        if (uploaded.findIndex((f) => f.name === file.name) === -1) {\n            uploaded.push(file);\n            if (uploaded.length === MAX_COUNT) setFileLimit(true);\n            if (uploaded.length > MAX_COUNT) {\n                alert(`You can only add a maximum of ${MAX_COUNT} files`);\n                setFileLimit(false);\n                limitExceeded = true;\n                return true;\n            }\n        }\n    })\n    if (!limitExceeded) setUploadedFiles(uploaded)\n  }\n\n  const handleFileEvent =  (e) => {\n    const chosenFiles = Array.prototype.slice.call(e.target.files)\n    handleUploadFiles(chosenFiles);\n}\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n    setMessage(\"\");\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    //validate\n    if (uploadedFiles.length == 0) {\n      alert(\"Please uploade at least 1 file!\");\n    }\n\n    // If passed validation, call auth service to send the API request\n    \n    if (checkBtn.current.context._errors.length === 0) {\n\n      // Consolidate the availbility\n      let updatedValue = availability\n      var weekdays = Object.keys(availability)\n      for (var i=0; i<weekdays.length; i++) {\n        updatedValue[weekdays[i]][\"start\"] = startTime\n        updatedValue[weekdays[i]][\"end\"] = endTime\n      }\n      setAvailability(availability => ({\n            ...availability,\n            ...updatedValue\n          }));\n      \n      // upload the file to firebase storage\n      for (var i=0; i<uploadedFiles.length;i++) {\n        const storageRef = ref(storage, `/${email}/${uploadedFiles[i].name}`)\n        const uploadTask = uploadBytesResumable(storageRef, uploadedFiles[i]);\n\n        uploadTask.on(\n          \"state_changed\",\n          () => {},\n          (err) => console.log(err),\n          () => {\n              getDownloadURL(uploadTask.snapshot.ref).then((url) => {\n                const uploaded = uploadedURLs\n                uploaded.push(url)\n                setUploadedURLs(uploaded);\n              });\n            })\n            if (uploadedURLs.length === uploadedFiles.length){\n\n              alert(\"Files uploaded successfully!\")\n              AuthService.register_tutor(name, email, password, hourlyRate, availability, selectedSubjects, uploadedURLs).then(\n                (response) => {\n                  if (response.status === 200) {\n                    setMessage(\"Registered Successfully!\");\n                    setSuccessful(true);\n                    setTimeout(function () {\n                      navigate(\"/login\");\n                      window.location.reload();\n                    }, 2000);\n                  } else {\n                    setMessage(\"Error, try again!\");\n                    setSuccessful(false);\n                    setTimeout(function () {\n                      setMessage(\"\");\n                    }, 5000);\n                  }\n                },\n                (error) => {\n                  var resMessage = \"\"\n                  if (error.response.status === 406) {\n                    resMessage = \"This email has been registered!\"\n                  } else {\n                    resMessage =\n                    (error.response &&\n                      error.response.data &&\n                      error.response.data.message) ||\n                    error.message ||\n                    error.toString();\n                  }\n                  setMessage(resMessage);\n                  setSuccessful(false);\n                }\n              );\n          }\n        }\n    }\n  };\n\n  return (\n        <Form onSubmit={handleRegister} ref={form}>\n          <h3>Register Tutor</h3>\n          {!successful && (\n\n            <div>\n              <hr className=\"hr\" />\n              <h4>Basic Details</h4>\n              <div className=\"mb-3\">\n                <label htmlFor=\"name\">Name</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"name\"\n                  value={name}\n                  onChange={onChangeName}\n                  validations={[required]}\n                />\n              </div>\n\n              <div className=\"mb-3\">\n                <label htmlFor=\"email\">Email</label>\n                <Input\n                  type=\"text\"\n                  name=\"email\"\n                  className=\"form-control\"\n                  value={email}\n                  onChange={onChangeEmail}\n                  validations={[required, validEmail]}\n                />\n              </div>\n\n              <div className=\"mb-3\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"mb-3\">\n                <label htmlFor=\"hourlyrate\">Indicated Hourly Rate<div id=\"hourlyRate\">$50</div></label>\n                <Input\n                  type=\"range\"\n                  min=\"10\"\n                  max=\"100\"\n                  className=\"form-control\"\n                  step={5}\n                  value={hourlyRate}\n                  onChange={onChangeHourlyRate}\n                  validations={[required]}\n                   />\n              </div>\n\n              <hr className=\"hr\" />\n              <h4>Availabilities</h4>\n              <div className=\"mb-3\">\n                <div className=\"mb-4\" id=\"addAvail\">\n\n                  <DropdownMultiselect \n                    options={weekdayArray} \n                    name=\"weekdayArray\"\n                    handleOnChange={(selected) => {\n                    onChangeWeekDays(selected);\n                  }}\n                    validations= {[required]}\n                  />\n\n                  <label>Start</label>\n                  <TimePicker \n                      initialValue=\"08:00\"\n                      start=\"00:00\"\n                      end=\"23:59\"\n                      step={30} \n                      value={startTime}\n                      onChange={onChangeStartTime}\n                      validations={[required]}\n                      />\n                  <label>End</label>\n                  <TimePicker \n                      initialValue=\"10:00\"\n                      start={startForEndTime}\n                      end=\"23:59\"\n                      step={30} \n                      value={endTime}\n                      onChange={onChangeEndTime}\n                      validations={[required]}\n                      />\n                </div>\n              </div>\n\n              <hr className=\"hr\"></hr>\n              <h4>Proficient Subjects</h4>\n              <div className=\"mb-3\">\n                  <label htmlFor=\"options\">PSLE</label>\n                  <DropdownMultiselect options={PSLEArray} name=\"pslesubjects\" \n                  handleOnChange={(selected) => {\n                    OnChangePSLE(selected);\n                  }}/>\n              </div>\n\n              <div className=\"mb-3\">\n                  <label htmlFor=\"options\">O-Level</label>\n                  <DropdownMultiselect options={OLevelArray} name=\"olevelsubjects\"\n                  handleOnChange={(selected) => {\n                    onChangeOlevel(selected);\n                  }}/>\n              </div>\n\n              <div className=\"mb-3\">\n                  <label htmlFor=\"options\">A-Level</label>\n                  <DropdownMultiselect options={ALevelArray} name=\"alevelsubjects\"\n                  handleOnChange={(selected) => {\n                    onChangeAlevel(selected);\n                  }}/>\n              </div>\n\n              <hr className=\"hr\" />\n              <h4>Certificate of Evidence</h4>\n              <div className=\"alert alert-primary\" role=\"alert\"> \n                <p className=\"mb-0\"> \n                  You may submit any document proving your ability as a Tutor for subjects indicated above\n                </p>\n              </div>\n\n              <div className=\"mb-3\">\n                <input \n                className=\"form-control\" \n                type=\"file\" \n                multiple\n                id=\"formFileMultiple\" \n                onChange={handleFileEvent}\n                disabled={fileLimit}\n                 />\n                <div className=\"uploaded-files-list\">\n                    {uploadedFiles.map(file => (\n                      <div >\n                          {file.name}\n                      </div>))}\n                  </div>\n                </div>\n              \n              \n\n              <div className=\"d-grid\">\n                <button className=\"btn btn-success btn-block\">Register</button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"mb-3\">\n              <div\n                className={\n                  successful ? \"alert alert-success\" : \"alert alert-danger\"\n                }\n                role=\"alert\"\n              >\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n  );\n};\n\nexport default RegisterTutor","/Users/chenhan/Desktop/eti_assignment2/React/src/components/ChatroomPage.js",["144","145","146"],[],"import React, { useState, useEffect } from 'react';\nimport { Dropdown, Container, Row, Col } from 'react-bootstrap';\nimport Chatroom from './Chatroom';\nimport AuthService from \"../services/auth.service\";\nimport ChattingServices from '../services/chatting.service';\n\nfunction ChatRoomPage() {\n\n  const currentUser = AuthService.getCurrentUser();\n  const [chatrooms, setChatrooms] = useState(ChattingServices.getCurrentChatList());\n\n  const [activeChatroom, setActiveChatroom] = useState(\n    chatrooms && chatrooms.length > 0 ? chatrooms[0] : null\n  );\n  \n  const changeRoom = (chatroom) => {\n    ChattingServices.getChatList(currentUser.user_id, currentUser.user_type).then(\n      (response) => {\n        setChatrooms(response.data)\n        if (chatroom.messages === null){\n          chatroom.messages = []\n        }\n        setActiveChatroom(chatroom)\n      },\n      (error) => {\n        if (error.response.status == 404){\n          console.log(error)\n          alert(error)\n        }\n      }\n    );\n  }\n  /*\n  useEffect(() => {\n    ChattingServices.getChatList().then(\n        (response) => {\n          setChatRooms(response.data)\n          setActiveChatroom(chatrooms[0])\n        },\n        (error) => {\n          if (error.response.status == 404){\n            console.log(error)\n            alert(error)\n          }\n        }\n      );\n\n  }, [chatrooms]);\n  */\nreturn (\n <div className='auth-inner2' style={{textAlign: \"center\"}}>\n\n    {activeChatroom ? (\n\n    <Container fluid>\n    <Row>\n        <Col md={12}>\n            <br></br>\n        <Dropdown>\n            <Dropdown.Toggle variant=\"light\" size='lg' id=\"dropdown-basic\">\n                {currentUser.user_type === \"Tutor\" && (\n                    \"Student: \" + activeChatroom.student_name\n                )}\n                {currentUser.user_type === \"Student\" && (\n                    \"Tutor: \" + activeChatroom.tutor_name\n                )}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n            {chatrooms.map((chatroom) => (\n                <Dropdown.Item\n                key={chatroom.chat_id}\n                onClick={() => changeRoom(chatroom)}\n                >\n                {currentUser.user_type === \"Tutor\" && (\n                    chatroom.student_name\n                )}\n                {currentUser.user_type === \"Student\" && (\n                    chatroom.tutor_name\n                )}\n                </Dropdown.Item>\n            ))}\n            </Dropdown.Menu>\n        </Dropdown>\n        </Col>\n        <Col md={12}>\n        {chatrooms.map((chatroom) => {\n            if (chatroom.chat_id === activeChatroom.chat_id) {\n            return <Chatroom key={chatroom.chat_id} chatDetail={chatroom} />;\n            }\n            return null;\n        })}\n        </Col>\n    </Row>\n    </Container>\n\n\n    ) : (\n      <div className='auth-inner'>\n        <h3>You do not have a chatroom</h3>\n        {currentUser.user_type == \"student\" && (\n          <div>please book a session with your desired tutor first!\n            </div>\n        )} \n        </div>\n    )}\n    </div>\n  );\n}\n\nexport default ChatRoomPage;\n","/Users/chenhan/Desktop/eti_assignment2/React/src/components/Tutor.js",["147","148"],[],"import AuthService from \"../services/auth.service\";\nimport React, { useState, useRef } from \"react\";\n\n\nconst Tutor = () => {\n  const currentUser = AuthService.getCurrentUser();\n\n\n  return (\n    <div className=\"auth-inner\">\n      <header className=\"tutorPage\">\n      <h3>Welcome!</h3> \n      <h3> Tutor {currentUser.name}</h3>\n      </header>\n      \n    </div>\n  );\n};\n\nexport default Tutor; ","/Users/chenhan/Desktop/eti_assignment2/React/src/services/auth.service.js",["149"],[],"// This ride.service.js containing all the API request to the microservices - Auth.go required in the project.\nimport { upload } from \"@testing-library/user-event/dist/upload\";\nimport axios from \"axios\";\n\nconst AUTH_URL = \"http://34.29.94.75:5050/api/auth/\"\n\naxios.defaults.withCredentials = true\nlet axiosConfig = {\n    headers: {\n        'Content-Type': 'text/plain',\n       // \"Access-Control-Allow-Origin\": \"http://localhost:3000\"\n    },\n    withCredentials : true,\n}\n\nconst register_student = (name, email, password, school, subjects) => {\n    return axios.post(AUTH_URL + \"signup/student\", {\n        \"name\" : name,\n        \"email\": email,\n        \"password\" : password,\n        \"school\" : school,\n        \"area_of_interest\": subjects\n    }, axiosConfig);\n};\n\n\nconst register_tutor = (name, email, password, hourlyRate, availability, subjects, uploadedFiles) => {\n    return axios.post(AUTH_URL + \"signup/tutor\", {\n        \"name\" : name,\n        \"email\": email,\n        \"password\" : password,\n        \"hourly_rate\": hourlyRate,\n        \"availability\": availability,\n        \"area_of_interest\": subjects,\n        \"cert_of_evidence\": uploadedFiles\n    }, axiosConfig);\n};\n\n\n\nconst login = (email_address, password) => {\n    return axios.post(AUTH_URL + \"login\", {\n        \"email\": email_address,\n        \"password\": password },\n        axiosConfig)\n            .then((response) => {\n                console.log(response.data)\n            if (response.data.email) {\n\n                delete response.data.password\n                localStorage.setItem(\"user\", JSON.stringify(response.data));\n            }\n        return response.data;\n      });\n      \n};\n  \nconst logout = () => {\n    localStorage.clear();\n};\n\n\nconst getCurrentUser = () => {\n    return JSON.parse(localStorage.getItem(\"user\"));\n};\n  \n\nconst AuthService = {\n    register_student,\n    register_tutor,\n    login,\n    logout,\n    getCurrentUser,\n}\n\n  \nexport default AuthService;\n\n\n\n","/Users/chenhan/Desktop/eti_assignment2/React/src/services/subject.service.js",[],[],"/Users/chenhan/Desktop/eti_assignment2/React/src/services/chatting.service.js",[],[],"/Users/chenhan/Desktop/eti_assignment2/React/src/common/EventBus.js",[],[],"/Users/chenhan/Desktop/eti_assignment2/React/src/services/payment.service..js",[],[],"/Users/chenhan/Desktop/eti_assignment2/React/src/services/tutoring.service.js",["150"],[],"import { upload } from \"@testing-library/user-event/dist/upload\";\nimport axios from \"axios\";\n\n//const TUTORING_URL = \"https://tutoring-4dcnj7fm6a-uc.a.run.app/api/tutoring/\"\n//const TUTORING_URL = \"http://localhost:5052/api/tutoring/\"\nconst TUTORING_URL = \"http://34.132.242.222:5052/api/tutoring/\"\n\naxios.defaults.withCredentials = true\n\nlet axiosConfig = {\n    headers: {\n        'Content-Type': 'text/plain',\n       // \"Access-Control-Allow-Origin\": \"http://localhost:3000\"\n    },\n    withCredentials : true,\n}\n\n\nconst matchTutors = (searchedSubjects) => {\n    return axios.post(TUTORING_URL + \"matchtutors\", searchedSubjects,\n        axiosConfig)\n            .then((response) => {\n        return response;\n      });\n};\n\nconst applyForTutor = (application) => {\n    return axios.post(TUTORING_URL + \"apply\", application,\n        axiosConfig)\n            .then((response) => {\n        return response;\n      });\n};\n\nconst getApplications = (user_id, user_type) => {\n    return axios.get(TUTORING_URL + \"getapplications/\" + user_id + \"/\" + user_type, \n        axiosConfig)\n            .then((response) => {\n        return response.data;\n      });\n};\n\nconst handleApplications = (user_type, application) => {\n    return axios.post(TUTORING_URL + \"handleapplications/\" + user_type, application,\n        axiosConfig)\n            .then((response) => {\n        return response;\n      });\n};\n\nconst TutoringService = {\n    matchTutors,\n    applyForTutor,\n    getApplications,\n    handleApplications\n}\n\n  \nexport default TutoringService;\n\n","/Users/chenhan/Desktop/eti_assignment2/React/src/components/Chatroom.js",["151"],[],"import React, { useState, useRef, useEffect } from 'react';\nimport { Container, Row, Col, Form, Button, ListGroup } from 'react-bootstrap';\nimport AuthService from \"../services/auth.service\";\nimport ChattingServices from '../services/chatting.service';\n\nfunction ChatRoom({ chatDetail }) {\n\n  const currentUser = AuthService.getCurrentUser();\n\n  const [message, setMessage] = useState('');\n  \n  const [messages, setMessages] = useState(chatDetail.messages);\n  const listGroupRef = useRef(null);\n\n  useEffect(() => {\n    listGroupRef.current.scrollTop = listGroupRef.current.scrollHeight;\n  }, [messages]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (message !== \"\") {\n          ChattingServices.updateChatList(chatDetail.chat_id, {\n            \"sender_id\": currentUser.user_id,\n            \"content\": message,\n            \"timestamp\": Date.now()\n        })\n        var opp_user = \"\"\n        if (currentUser.user_type === \"Tutor\") {\n            opp_user = chatDetail.student_id\n        } else {\n            opp_user = chatDetail.tutor_id\n        }\n        ChattingServices.sendMsg(currentUser.user_id, opp_user, currentUser.user_type, message).then(\n            (response) => {\n              console.log(response)\n              if (response.status === 200) {\n                if (messages === null) {\n                  setMessages([{\n                      \"sender_id\": currentUser.user_id,\n                      \"content\": message,\n                      \"timestamp\": Date.now()\n                    }])\n                } else {\n                  setMessages([...messages, {\n                    \"sender_id\": currentUser.user_id,\n                    \"content\": message,\n                    \"timestamp\": Date.now()\n                }]);\n                }\n                setMessage('');\n              } else {\n                console.log(\"response status: \" + response.status);\n                alert(\"Server problem\")\n              }\n            },\n            (error) => {\n              if (error.response.status == 404){\n                alert(\"something went wrong\")\n              }\n            }\n        );\n    }\n  };\n  return (\n    <div className='auth-inner'>\n    {currentUser.user_type === \"Student\" && (\n      <strong>Chat with: {chatDetail.tutor_name}</strong>\n    )}\n    {currentUser.user_type === \"Tutor\" && (\n          <strong>Chat with: {chatDetail.student_name}</strong>\n    )}\n    <Container>\n      <Row className=\"\">\n        <Col  className=\"mx-auto\">\n          <div>\n            <ListGroup ref={listGroupRef} className=\"mb-3\" style={{height: '50vh', maxHeight: '50vh', overflowY: 'auto' }}>\n             { messages && (\n                messages.map((msg, index) => (\n                  <ListGroup.Item \n                    key={index} \n                    style={{ \n                      wordWrap: 'break-word',\n                      backgroundColor: msg.sender_id === currentUser.user_id ? '#F2F2F2' : '#ADD8E6',\n                      textAlign:  msg.sender_id === currentUser.user_id ? 'right' : 'left'\n                    }}\n                  >\n                    {msg.content}\n                  </ListGroup.Item>\n                ))\n              )}\n\n            </ListGroup>\n            <Form onSubmit={handleSubmit}>\n              <Form.Group className=\"d-flex align-items-center\">\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your message\"\n                  value={message}\n                  onChange={(event) => setMessage(event.target.value)}\n                  style={{ backgroundColor: '#F2F2F2', flexGrow: 1 }}\n                />\n                <Button type=\"submit\" style={{ backgroundColor: '#7DCEA0', border: 'none' }}>\n                  Send\n                </Button>\n              </Form.Group>\n            </Form>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n\n    </div>\n  );\n}\n\nexport default ChatRoom;\n",{"ruleId":"152","severity":1,"message":"153","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":33},{"ruleId":"152","severity":1,"message":"156","line":4,"column":8,"nodeType":"154","messageId":"155","endLine":4,"endColumn":19},{"ruleId":"157","severity":1,"message":"158","line":69,"column":9,"nodeType":"154","messageId":"159","endLine":69,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":75,"column":9,"nodeType":"154","messageId":"159","endLine":75,"endColumn":14},{"ruleId":"160","severity":1,"message":"161","line":128,"column":15,"nodeType":"162","messageId":"163","endLine":128,"endColumn":17},{"ruleId":"160","severity":1,"message":"161","line":128,"column":30,"nodeType":"162","messageId":"163","endLine":128,"endColumn":32},{"ruleId":"160","severity":1,"message":"161","line":128,"column":48,"nodeType":"162","messageId":"163","endLine":128,"endColumn":50},{"ruleId":"160","severity":1,"message":"161","line":128,"column":64,"nodeType":"162","messageId":"163","endLine":128,"endColumn":66},{"ruleId":"160","severity":1,"message":"161","line":131,"column":51,"nodeType":"162","messageId":"163","endLine":131,"endColumn":53},{"ruleId":"160","severity":1,"message":"161","line":131,"column":91,"nodeType":"162","messageId":"163","endLine":131,"endColumn":93},{"ruleId":"160","severity":1,"message":"161","line":131,"column":134,"nodeType":"162","messageId":"163","endLine":131,"endColumn":136},{"ruleId":"160","severity":1,"message":"161","line":137,"column":31,"nodeType":"162","messageId":"163","endLine":137,"endColumn":33},{"ruleId":"152","severity":1,"message":"164","line":5,"column":20,"nodeType":"154","messageId":"155","endLine":5,"endColumn":34},{"ruleId":"157","severity":1,"message":"158","line":100,"column":13,"nodeType":"154","messageId":"159","endLine":100,"endColumn":18},{"ruleId":"157","severity":1,"message":"158","line":106,"column":13,"nodeType":"154","messageId":"159","endLine":106,"endColumn":18},{"ruleId":"160","severity":1,"message":"161","line":153,"column":37,"nodeType":"162","messageId":"163","endLine":153,"endColumn":39},{"ruleId":"160","severity":1,"message":"161","line":195,"column":37,"nodeType":"162","messageId":"163","endLine":195,"endColumn":39},{"ruleId":"152","severity":1,"message":"153","line":2,"column":27,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"160","severity":1,"message":"161","line":37,"column":41,"nodeType":"162","messageId":"163","endLine":37,"endColumn":43},{"ruleId":"165","severity":1,"message":"166","line":43,"column":10,"nodeType":"167","endLine":43,"endColumn":12,"suggestions":"168"},{"ruleId":"160","severity":1,"message":"161","line":61,"column":45,"nodeType":"162","messageId":"163","endLine":61,"endColumn":47},{"ruleId":"160","severity":1,"message":"161","line":70,"column":41,"nodeType":"162","messageId":"163","endLine":70,"endColumn":43},{"ruleId":"160","severity":1,"message":"161","line":86,"column":41,"nodeType":"162","messageId":"163","endLine":86,"endColumn":43},{"ruleId":"160","severity":1,"message":"161","line":106,"column":39,"nodeType":"162","messageId":"163","endLine":106,"endColumn":41},{"ruleId":"165","severity":1,"message":"169","line":163,"column":10,"nodeType":"167","endLine":163,"endColumn":19,"suggestions":"170"},{"ruleId":"152","severity":1,"message":"171","line":2,"column":17,"nodeType":"154","messageId":"155","endLine":2,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":2,"column":27,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"153","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":33},{"ruleId":"152","severity":1,"message":"172","line":1,"column":17,"nodeType":"154","messageId":"155","endLine":1,"endColumn":28},{"ruleId":"152","severity":1,"message":"173","line":2,"column":13,"nodeType":"154","messageId":"155","endLine":2,"endColumn":21},{"ruleId":"157","severity":1,"message":"158","line":106,"column":9,"nodeType":"154","messageId":"159","endLine":106,"endColumn":14},{"ruleId":"157","severity":1,"message":"158","line":112,"column":9,"nodeType":"154","messageId":"159","endLine":112,"endColumn":14},{"ruleId":"174","severity":1,"message":"175","line":207,"column":23,"nodeType":"176","messageId":"177","endLine":207,"endColumn":25},{"ruleId":"160","severity":1,"message":"161","line":235,"column":30,"nodeType":"162","messageId":"163","endLine":235,"endColumn":32},{"ruleId":"157","severity":1,"message":"178","line":256,"column":16,"nodeType":"154","messageId":"159","endLine":256,"endColumn":17},{"ruleId":"152","severity":1,"message":"179","line":1,"column":27,"nodeType":"154","messageId":"155","endLine":1,"endColumn":36},{"ruleId":"160","severity":1,"message":"161","line":26,"column":35,"nodeType":"162","messageId":"163","endLine":26,"endColumn":37},{"ruleId":"160","severity":1,"message":"161","line":101,"column":32,"nodeType":"162","messageId":"163","endLine":101,"endColumn":34},{"ruleId":"152","severity":1,"message":"171","line":2,"column":17,"nodeType":"154","messageId":"155","endLine":2,"endColumn":25},{"ruleId":"152","severity":1,"message":"153","line":2,"column":27,"nodeType":"154","messageId":"155","endLine":2,"endColumn":33},{"ruleId":"152","severity":1,"message":"180","line":2,"column":10,"nodeType":"154","messageId":"155","endLine":2,"endColumn":16},{"ruleId":"152","severity":1,"message":"180","line":1,"column":10,"nodeType":"154","messageId":"155","endLine":1,"endColumn":16},{"ruleId":"160","severity":1,"message":"161","line":57,"column":41,"nodeType":"162","messageId":"163","endLine":57,"endColumn":43},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'CheckButton' is defined but never used.","no-redeclare","'value' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'DropdownButton' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentUser.user_id' and 'currentUser.user_type'. Either include them or remove the dependency array.","ArrayExpression",["181"],"React Hook useEffect has missing dependencies: 'handleAccept', 'handleReject', 'listItemsApps', and 'userType'. Either include them or remove the dependency array.",["182"],"'useState' is defined but never used.","'ChangeEvent' is defined but never used.","'ReactDOM' is defined but never used.","array-callback-return","Array.prototype.some() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'i' is already defined.","'useEffect' is defined but never used.","'upload' is defined but never used.",{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},"Update the dependencies array to be: [currentUser.user_id, currentUser.user_type]",{"range":"187","text":"188"},"Update the dependencies array to be: [appList, handleAccept, handleReject, listItemsApps, userType]",{"range":"189","text":"190"},[1301,1303],"[currentUser.user_id, currentUser.user_type]",[5239,5248],"[appList, handleAccept, handleReject, listItemsApps, userType]"]