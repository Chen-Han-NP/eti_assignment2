{"ast":null,"code":"var _jsxFileName = \"/Users/chenhan/Desktop/eti_assignment2/React/src/components/ChatroomPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Dropdown, Container, Row, Col } from 'react-bootstrap';\nimport Chatroom from './Chatroom';\nimport AuthService from \"../services/auth.service\";\nimport ChattingServices from '../services/chatting.service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatRoomPage() {\n  _s();\n  const currentUser = AuthService.getCurrentUser();\n  const [chatrooms, setChatrooms] = useState(ChattingServices.getCurrentChatList());\n  const [activeChatroom, setActiveChatroom] = useState(chatrooms && chatrooms.length > 0 ? chatrooms[0] : null);\n  const changeRoom = chatroom => {\n    ChattingServices.getChatList(currentUser.user_id, currentUser.user_type).then(response => {\n      setChatrooms(response.data);\n      if (chatroom.messages === null) {\n        chatroom.messages = [];\n      }\n      setActiveChatroom(chatroom);\n    }, error => {\n      if (error.response.status == 404) {\n        console.log(error);\n        alert(error);\n      }\n    });\n  };\n  /*\n  useEffect(() => {\n    ChattingServices.getChatList().then(\n        (response) => {\n          setChatRooms(response.data)\n          setActiveChatroom(chatrooms[0])\n        },\n        (error) => {\n          if (error.response.status == 404){\n            console.log(error)\n            alert(error)\n          }\n        }\n      );\n   }, [chatrooms]);\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-inner2\",\n    style: {\n      textAlign: \"center\"\n    },\n    children: activeChatroom ? /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"light\",\n              size: \"lg\",\n              id: \"dropdown-basic\",\n              children: [currentUser.user_type === \"Tutor\" && \"Student: \" + activeChatroom.student_name, currentUser.user_type === \"Student\" && \"Tutor: \" + activeChatroom.tutor_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: chatrooms.map(chatroom => /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                onClick: () => changeRoom(chatroom),\n                children: [currentUser.user_type === \"Tutor\" && chatroom.student_name, currentUser.user_type === \"Student\" && chatroom.tutor_name]\n              }, chatroom.chat_id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: 12,\n          children: chatrooms.map(chatroom => {\n            if (chatroom.chat_id === activeChatroom.chat_id) {\n              return /*#__PURE__*/_jsxDEV(Chatroom, {\n                chatDetail: chatroom\n              }, chatroom.chat_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 20\n              }, this);\n            }\n            return null;\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"You do not have a chatroom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), currentUser.user_type == \"student\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"please book a session with your desired tutor first!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 2\n  }, this);\n}\n_s(ChatRoomPage, \"k20w8s980XToTlifwS76p1/rNN4=\");\n_c = ChatRoomPage;\nexport default ChatRoomPage;\nvar _c;\n$RefreshReg$(_c, \"ChatRoomPage\");","map":{"version":3,"names":["React","useState","useEffect","Dropdown","Container","Row","Col","Chatroom","AuthService","ChattingServices","ChatRoomPage","currentUser","getCurrentUser","chatrooms","setChatrooms","getCurrentChatList","activeChatroom","setActiveChatroom","length","changeRoom","chatroom","getChatList","user_id","user_type","then","response","data","messages","error","status","console","log","alert","textAlign","student_name","tutor_name","map","chat_id"],"sources":["/Users/chenhan/Desktop/eti_assignment2/React/src/components/ChatroomPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Dropdown, Container, Row, Col } from 'react-bootstrap';\nimport Chatroom from './Chatroom';\nimport AuthService from \"../services/auth.service\";\nimport ChattingServices from '../services/chatting.service';\n\nfunction ChatRoomPage() {\n\n  const currentUser = AuthService.getCurrentUser();\n  const [chatrooms, setChatrooms] = useState(ChattingServices.getCurrentChatList());\n\n  const [activeChatroom, setActiveChatroom] = useState(\n    chatrooms && chatrooms.length > 0 ? chatrooms[0] : null\n  );\n  \n  const changeRoom = (chatroom) => {\n    ChattingServices.getChatList(currentUser.user_id, currentUser.user_type).then(\n      (response) => {\n        setChatrooms(response.data)\n        if (chatroom.messages === null){\n          chatroom.messages = []\n        }\n        setActiveChatroom(chatroom)\n      },\n      (error) => {\n        if (error.response.status == 404){\n          console.log(error)\n          alert(error)\n        }\n      }\n    );\n  }\n  /*\n  useEffect(() => {\n    ChattingServices.getChatList().then(\n        (response) => {\n          setChatRooms(response.data)\n          setActiveChatroom(chatrooms[0])\n        },\n        (error) => {\n          if (error.response.status == 404){\n            console.log(error)\n            alert(error)\n          }\n        }\n      );\n\n  }, [chatrooms]);\n  */\nreturn (\n <div className='auth-inner2' style={{textAlign: \"center\"}}>\n\n    {activeChatroom ? (\n\n    <Container fluid>\n    <Row>\n        <Col md={12}>\n            <br></br>\n        <Dropdown>\n            <Dropdown.Toggle variant=\"light\" size='lg' id=\"dropdown-basic\">\n                {currentUser.user_type === \"Tutor\" && (\n                    \"Student: \" + activeChatroom.student_name\n                )}\n                {currentUser.user_type === \"Student\" && (\n                    \"Tutor: \" + activeChatroom.tutor_name\n                )}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n            {chatrooms.map((chatroom) => (\n                <Dropdown.Item\n                key={chatroom.chat_id}\n                onClick={() => changeRoom(chatroom)}\n                >\n                {currentUser.user_type === \"Tutor\" && (\n                    chatroom.student_name\n                )}\n                {currentUser.user_type === \"Student\" && (\n                    chatroom.tutor_name\n                )}\n                </Dropdown.Item>\n            ))}\n            </Dropdown.Menu>\n        </Dropdown>\n        </Col>\n        <Col md={12}>\n        {chatrooms.map((chatroom) => {\n            if (chatroom.chat_id === activeChatroom.chat_id) {\n            return <Chatroom key={chatroom.chat_id} chatDetail={chatroom} />;\n            }\n            return null;\n        })}\n        </Col>\n    </Row>\n    </Container>\n\n\n    ) : (\n      <div className='auth-inner'>\n        <h3>You do not have a chatroom</h3>\n        {currentUser.user_type == \"student\" && (\n          <div>please book a session with your desired tutor first!\n            </div>\n        )} \n        </div>\n    )}\n    </div>\n  );\n}\n\nexport default ChatRoomPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}