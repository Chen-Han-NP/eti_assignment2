{"ast":null,"code":"var _jsxFileName = \"/Users/chenhan/Desktop/eti_assignment2/React/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport AuthService from \"../services/auth.service\";\n//import RideServices from \"../services/ride.service\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst required = value => {\n  if (!value) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"invalid-feedback d-block\",\n      children: \"This field is required!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this);\n  }\n};\nconst Login = () => {\n  _s();\n  const form = useRef();\n  const checkBtn = useRef();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const navigate = useNavigate();\n  const onChangeEmail = e => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n  const onChangePassword = e => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n  const handleLogin = e => {\n    e.preventDefault();\n    setMessage(\"\");\n    setLoading(true);\n    form.current.validateAll();\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(email, password).then(() => {\n        navigate(\"/\");\n        window.location.reload();\n        /*\n        // After login successfully, the user should have cookie with jwt token\n        // Can then call the currentRide function to get the current ride and save in the localstorage\n        // and call the allRides function to retrieve all the rides for the user\n                RideServices.currentRide().then(\n        ()=> {\n          \n          RideServices.allrides(\"\").then(\n            () => {\n              navigate(\"/\");\n              window.location.reload();\n            }\n          )\n        },\n        (error) => {\n          var resMessage = \"Error: \" + error.response.status.toString() + \": \" + error.response.data;\n          setLoading(false);\n          setMessage(resMessage);\n         }\n        \n        )\n        */\n      }, error => {\n        var resMessage = \"Error: \" + error.response.status.toString() + \": \" + error.response.data;\n        setLoading(false);\n        setMessage(resMessage);\n      });\n    } else {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleLogin,\n    ref: form,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"text\",\n        className: \"form-control\",\n        name: \"email\",\n        value: email,\n        onChange: onChangeEmail,\n        validations: [required]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"password\",\n        className: \"form-control\",\n        name: \"password\",\n        value: password,\n        onChange: onChangePassword,\n        validations: [required]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-grid\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-block\",\n        disabled: loading,\n        children: [loading && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"spinner-border spinner-border-sm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-danger\",\n        role: \"alert\",\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CheckButton, {\n      style: {\n        display: \"none\"\n      },\n      ref: checkBtn\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"qhsI+dluaeErkizDWwCGXmvVgoQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useRef","useNavigate","Form","Input","CheckButton","AuthService","required","value","Login","form","checkBtn","email","setEmail","password","setPassword","loading","setLoading","message","setMessage","navigate","onChangeEmail","e","target","onChangePassword","handleLogin","preventDefault","current","validateAll","context","_errors","length","login","then","window","location","reload","error","resMessage","response","status","toString","data","display"],"sources":["/Users/chenhan/Desktop/eti_assignment2/React/src/components/Login.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport AuthService from \"../services/auth.service\";\n//import RideServices from \"../services/ride.service\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"invalid-feedback d-block\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const navigate = useNavigate();\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setMessage(\"\");\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      AuthService.login(email, password).then(\n        () => {\n            navigate(\"/\");\n            window.location.reload();\n            /*\n\n          // After login successfully, the user should have cookie with jwt token\n          // Can then call the currentRide function to get the current ride and save in the localstorage\n          // and call the allRides function to retrieve all the rides for the user\n         \n          RideServices.currentRide().then(\n            ()=> {\n              \n              RideServices.allrides(\"\").then(\n                () => {\n                  navigate(\"/\");\n                  window.location.reload();\n                }\n              )\n            },\n            (error) => {\n              var resMessage = \"Error: \" + error.response.status.toString() + \": \" + error.response.data;\n              setLoading(false);\n              setMessage(resMessage);\n\n            }\n            \n          )\n\n          */\n        },\n        (error) => {\n          var resMessage = \"Error: \" + error.response.status.toString() + \": \" + error.response.data;\n          setLoading(false);\n          setMessage(resMessage);\n        }\n      );\n    } else {\n      setLoading(false);\n    }\n  };\n\n  return (\n        <Form onSubmit={handleLogin} ref={form}>\n          <h3>Login</h3>\n          <div className=\"mb-3\">\n            <label htmlFor=\"email\">Email Address</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"email\"\n              value={email}\n              onChange={onChangeEmail}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"d-grid\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"mb-3\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n  );\n};\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}